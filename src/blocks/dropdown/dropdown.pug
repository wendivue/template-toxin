include ../text-field/text-field.pug
include ./dropdown-item/dropdown-item.pug

mixin dropdown({ isOpenMenu, size, isButtonMenu, value, text, isItemsRoom, state, id, type, name, iconText, themeIcon, textState, isDropdown, itemsList, isHideButtonCleans })
  -
    const buttonCleansHideClass = isHideButtonCleans ? "dropdown__button-menu_hide" : "";
    let dropdownClass;
    let menuClass;

    if(['small'].includes(size)) dropdownClass += ' dropdown_' + size;
    if(['small'].includes(size)) menuClass += ' dropdown__menu_' + size;
    if(isOpenMenu) menuClass += ' dropdown__menu_active';

  .dropdown.js-dropdown(class=dropdownClass)
    +text-field({ isOpenMenu, size, id, type, value, name, iconText, themeIcon, textState, isDropdown, text })
    .dropdown__menu.js-dropdown__menu(class=menuClass)
      ul.dropdown__list
        +dropdown-item({ isItemsRoom, itemsList })
      if (isButtonMenu)
        .dropdown__wrapper-button-menu
          button.dropdown__button-menu.dropdown__button-menu_cleans.js-dropdown__button-menu_cleans(
            class=buttonCleansHideClass,
            type='button'
          ) очистить
          button.dropdown__button-menu.dropdown__button-menu_complete.js-dropdown__button-menu_complete(
            type='button'
          ) применить
