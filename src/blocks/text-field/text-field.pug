mixin text-field(props)
  -
    let {
      isActive = false,
      isSmall = false,
      isSubmit = false,
      id = '',
      isOpen = false,
      text = '',
      textState = '',
      type = 'text',
      value = '',
      name,
      placeholder = '',
      iconText = '',
      readonly = false,
      mask = '',
    } = props;

    let textFieldClasses = '';
    let inputClasses = '';
    let iconClasses = '';
    id = id ? 'text-field-' + id : '';

    if (isSmall) textFieldClasses +=' text-field_size_small';
    if (mask) textFieldClasses += ' js-text-field_masked';
    if (isActive) inputClasses += ' text-field__input_active';
    if (isSubmit) iconClasses += ' text-field__icon_submit';
    if (iconText) inputClasses += ' text-field__input_has-icon';
    if (isOpen) inputClasses += ' text-field__input_no-bottom-outlines';

  .text-field.js-text-field(class=textFieldClasses)
    if (text)
      .text-field__text-wrapper
        label.text-field__label(for=id)= text
        if (textState)
          p.text-field__text-state= textState

    .text-field__input-wrapper
      input.text-field__input.js-text-field__input(
        class=inputClasses,
        id=id,
        type=type,
        value=value,
        placeholder=placeholder,
        name=name,
        readonly=readonly,
        data-inputmask=mask,
        required
      )

      if (iconText)
        button.text-field__icon(class=iconClasses)= iconText
